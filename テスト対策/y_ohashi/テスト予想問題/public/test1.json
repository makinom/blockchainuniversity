[
{
"q": "1976年に公開鍵暗号を発明したのは誰か？",
"a": "デフィーとヘルマン（ウィットフィールド・デフィー＆マーティン・ヘルマン）"
},
{
"q": "原始ブロックのことを英語で何というか？",
"a": "Genesis Block"
},
{
"q": "sha256のハッシュは何バイトか？",
"a": "32バイト"
},
{
"q": "sha512のハッシュは何バイトか？",
"a": "64バイト"
},
{
"q": "RIPEMD160のハッシュは何バイトか？",
"a": "20バイト"
},
{
"q": "sha256ripemd160のハッシュは何バイトか？",
"a": "20バイト"
},
{
"q": "ブロックに含まれる取引ID・ブロックIDはどのような形式になっているか？",
"a": "sha256sha256ハッシュをリトルエンディアンにした形式"
},
{
"q": "Base58エンコードとは？簡潔に説明せよ。",
"a": "バイナリデータを文字列で表現するフォーマットでBase64から英数字で見間違いやすい文字を排除したエンコード方式。（ 0, I, O, l, +, / が除外されている)"
},
{
"q": "Base58Checkエンコードとは？簡潔に説明せよ。",
"a": "データのsha256sha256のハッシュの値から頭4バイトを取り、データの後ろにくっつけてBase58エンコードした値。"
},
{
"q": "Base58Checkで用いられる4バイトのハッシュの値を何というか？",
"a": "チェックサム。"
},
{
"q": "ビットコインアドレスはどの形式でハッシュされているか？",
"a": "sha256ripemd160でハッシュされている。"
},
{
"q": "ビットコインアドレスはユーザーに表示する際、どのようにして表示されるか？",
"a": "通常公開鍵のハッシュアドレスであれば、0x00、スクリプトハッシュ（P2SH）の場合は0x05のバージョンバイトをデータの先頭に付与し、Base58Checkのエンコードをして表示される。"
},
{
"q": "上記のようなエンコード方法をとるとビットコインアドレスにある特徴がみられるがそれは何か？",
"a": "通常アドレスは1、P2SHは3で常に始まる。"
},
{
"q": "P2SHとは何の略か？またどういう意味か簡潔に説明せよ。",
"a": "P2SHは Pay to Script Hash の略で、スクリプトハッシュに対してビットコインを払うという意味である。マルチシグネチャが利用されている場合などに使われる。"
},
{
"q": "ビットコインの秘密鍵はどのような形式で表示されるか？",
"a": "WIF（ウォレットインポートフォーマット）と呼ばれる、Base58Checkのエンコードで表示される。"
},
{
"q": "ECDSAとは何か？",
"a": "楕円曲線を利用したデジタル署名の方式である（楕円曲線電子署名アルゴリズム）。秘密鍵とデータから署名を作成する。"
},
{
"q": "ECDSAの署名はどのような値か？",
"a": "(r,s)の2つの整数でできている。"
},
{
"q": "secp256k1とは何か？",
"a": "米国国立標準技術研究所(NIST)で策定された特別な楕円曲線と定数のこと。ビットコインで使われる楕円曲線はsecp256k1楕円曲線である。"
},
{
"q": "楕円曲線の特徴を説明せよ。",
"a": "2つの点を通る直線を引くと必ず3つ目の点を通る。X軸に垂直な直線の場合のみ2点しか通らない。2つの点をA、Bとし、3つ目の点をCとする。CのX軸対象の点をDとするとA+B=Dとあらわすことができる。"
},
{
"q": "Bitcoinにおけるジェネレーターポイントとは？",
"a": "ビットコインが使用するsecp256k1の楕円曲線の定数でG(55066263022277343669578718895168534326250603453777594175500187360389116729240,32670510020758816978083085130507043184471273380659243275938904335757337482424)とあらわされる。"
},
{
"q": "署名を作成するときはどのように生成するのがよいか？",
"a": "RFC6979などに沿って決定論的に作成する。1つのマスターシードから複数の秘密鍵を導き出すというような形が望ましい。（BIP32：HDウォレット）"
},
{
"q": "決定論的に作成しない場合のデメリットは何か？",
"a": "乱数と秘密鍵がアドレスの数分必要になり無限に増えていく可能性があり、決定論的に署名を作成する場合と違いすべてをバックアップしないといけなくなる。また、そのような性質からアドレスの使いまわしがしずらくなるためプライバシーの面でも不安要素がある。"
},
{
"q": "リトルエンディアンとは何か？説明せよ。",
"a": "数値をバイト表示した際にそのバイト列を最下位のバイトから逆順に表したもの。"
},
{
"q": "varintとは何か？説明せよ。",
"a": "1-9バイトで数値を表現する変動長整数型。252まではヘッダバイトなしで表現される。それ以上の場合は、fdに続けて2バイト、feに続けて4バイト、ffに続けて8バイトのリトルエンディアンで数値を表現する。ヘッダバイトを付与することにより最低限のデータ量で数値を表現できる。"
},
{
"q": "ビットコインは何桁の小数点で表示されるか？",
"a": "8桁の小数点。"
},
{
"q": "ビットコインの最小の値は？",
"a": "0.00000001ビットコイン。＝1サトシ。"
},
{
"q": "マークルツリーとは？簡潔に説明せよ。",
"a": "データの検証を行う際に使用されるツリー構造の一種で、一部のハッシュデータしか保持していなくても、ツリー全体の正当性を検査できる。"
},
{
"q": "OPコードとは？簡潔に説明せよ。",
"a": "1バイトだけでオペレーションを指定する識別方式のこと。"
},
{
"q": "数字のOPコードはいくつあるか？",
"a": "OP_0～OP_16の17個。OP_0はFalseと同値となる。"
},
{
"q": "OP_DUPはどういう意味か？",
"a": "スタックにある入力値を複製する。"
},
{
"q": "OP_ADD、OP_SUBは入力値をいくつとるか？",
"a": "2つ。"
},
{
"q": "OP_SWAPはどういう意味か？",
"a": "入力値を入れ替える。"
},
{
"q": "OP_BOOLANDはどういう意味か？",
"a": "2つの入力値を受け取りそのそれぞれの値が0かどうかチェックする。"
},
{
"q": "OP_2DUP、OP_3DUPとはどういう意味か？",
"a": "それぞれ、入力値を複製する。OP_2DUPは2個複製、OP_3DUPは3個複製する。"
},
{
"q": "OP_ROTとはどういう意味か？",
"a": "入力値の上位3つのスタックの順番を3番目を1番上に持ってくるように入れ替える。(x1,x2,x3→x2,x3,x1)"
},
{
"q": "OP_2SWAPとはどういう意味か？",
"a": "入力値の順番を2つの塊で入れ替える(x1,x2,x3,x4→x3,x4,x1,x2)"
},
{
"q": "OP_HASH160はどういう意味か？",
"a": "入力の値に対し、sha256のハッシュをかけさらにripemd160のハッシュをかける。"
},
{
"q": "OP_EQUALVERIFYとはどういう意味か？",
"a": "2つの入力値を比較して同じであれば何も値を返さず、違っていればfailを返す。"
},
{
"q": "OP_CHECKMULTISIGには有名なバグがあるがそれはどういうものか？",
"a": "スタックの消費数が+1されるにバグがある。そのため、scriptSigの先頭にOP_0を必ずつける必要がある。"
},
{
"q": "scriptPubkeyである「OP_3DUP OP_ADD OP_8 OP_EQUAL OP_SWAP OP_ROT OP_ADD OP_10 OP_EQUAL OP_2SWAP OP_ADD OP_4 OP_EQUAL OP_BOOLAND OP_BOOLAND」に対するscriptSigを答えよ",
"a": "OP_3 OP_1　OP_7"
},
{
"q": "BIPとは何か？簡潔に説明せよ。",
"a": "Bitcoin Improvement Proposalの略で、ビットコインの技術を議論するために作成された文章群。採用されているもの、検討中のもの、古くなって使われていないものなどの各BIPによっても違う。"
},
{
"q": "すでに古くて使われていないBIPをいくつか述べよ。",
"a": "BIP10とBIP12。BIP10はビットコインのブロックサイズを緩和する提案。BIP12は「OP_EVAL」という新しいopcodeを導入する提案。"
},
{
"q": "BIP16とは何か？簡潔に説明せよ。",
"a": "P2SHに関するBIPでP2SHをこのタイプに使われる追加のバリデーションルールを定義したもの。OP_HASH160 <hash> OP_EQUALVERIFYの形式でチェックしエラーにならなかったらredeemscriptが最後に実行される。"
},
{
"q": "redeemscriptとは何か？簡潔に説明せよ。",
"a": "マルチシグに対する回答となるスクリプト。(OP_CHECKMULTISIG)P2SHの際にハッシュかされて使用される。scriptPubkeyを短くする効果がある。"
},
{
"q": "BIP32とは何か？簡潔に説明せよ。",
"a": "決定論的に鍵生成をすることを定義したBIP（HDウォレット）。マスターシード1つをベースに無限大の秘密鍵・公開鍵を導出する。階層的な派生パスという概念で派生する。特殊なバイトをヘッダにおいて、拡張公開鍵はxpub、拡張秘密鍵はxprvで始まるようにする。"
},
{
"q": "BIP39とは何か？簡潔に説明せよ。",
"a": "秘密鍵（厳密にはマスターシード）をニーモニックと呼ばれる人間にも分かりやすいパスフレーズに変換することを定義したBIP。通常は12～24個のフレーズが生成され、そのフレーズからマスターシードを導出できる仕組み。"
},
{
"q": "なぜBIP39が有用なのか簡潔に説明してください。",
"a": "秘密鍵のような長い複雑な文字列を人間には暗記しずらく書留ミスも起こりやすい。ニーモニックであれば暗記しやすさや書留のミスも起こりにくくなり、秘密鍵をなくす可能性も抑えられる。"
},
{
"q": "BIP44とは何か？簡潔に説明せよ。",
"a": "BIP32で定義されている階層化のロジックはアカウントの概念がないため、派生パスを標準化することより、互換性が保たれるようにする仕組み。"
},
{
"q": "BitcoinにおけるBIP44の基本的な派生パスはどのようになるか？",
"a": "m/44'/0'/0' m/BIP44/ビットコインの識別番号/アカウント"
},
{
"q": "BIP45とは何か？簡潔に説明せよ。",
"a": "P2SH（マルチシグ）の場合のアドレスの生成方法に関する定義。BIP44でマルチシグを実現しようと思うと他人の公開鍵を知る必要がある。派生パスの生成方法を標準化する。現在実装例はほとんどない。"
},
{
"q": "BIP70-73とは何か？簡潔に説明せよ。",
"a": "ビットコインに支払に関するユーザービリティーをあげるためのBIPs。BIP70はペイメントに関する方法を定義している。直接信頼のおける店舗のAPI経由で支払いが行われるような仕組み。BIP71はBIP70用のHTTP通信のMYME TYPEの定義。BIP72はBIP70に対応したBitcoin URIの拡張を定義している。rの属性にペイメントリクエストURLを含む。BIP73はウォレットソフトがペイメントリクエストURLをリクエストする際にAcceptヘッダをつけることを定義している。"
},
{
"q": "ペイメントリクエストURLのメリットは？",
"a": "HTTPSを利用するためリクエスト自体が署名され中間者攻撃から守られる。お店自体に支払を認識されるため安心である。"
},
{
"q": "BIP65とは何か？簡潔に説明せよ。",
"a": "取引に含まれるnLocktimeに対して、CHECKLOCKTIMEVERIFYの引数を比較することでブロックチェーンの中に一定の時間まで資金をロックすることができる。"
},
{
"q": "ビットコインのノードに接続する場合、P2P最初に送りあう最初のコマンドは何か？",
"a": "versionコマンドを送りあった後、verackコマンドを送りあうことで通信が確立する。(S:version,R:version,S:verack,R:verack)"
},
{
"q": "8個の取引のあるブロックのmerkleblockメッセージに含まれたフラグバイトは0x7775です。左から1-8の番号を振った場合、どの取引がマッチするか？",
"a": "2,3,5,8"
},
{
"q": "あるメッセージは何の前触れもなくノード側から送られてくることがあるがそのメッセージは何か？2つ答えよ。",
"a": "txメッセージとblockメッセージ"
},
{
"q": "invのメッセージに含まれている基本的な情報とは？",
"a": "ブロックのハッシュ値が含まれている。"
},
{
"q": "alertメッセージはどのようなときに送られるか？",
"a": "緊急時に警告メッセージを送るために使われる。ソースにハードコーディングされた公開鍵に紐づいた秘密鍵で署名しないといけない。"
},
{
"q": "testnetとregtestの2つのモードの違いを述べよ",
"a": "testnetはビットコインの開発を行うためのネットワーク。流通する通貨に価値はなく、ビットコインと同様にインターネットにつながっていればtestnetのネットワークに接続できる。regtestはローカルにおいて独自のブロックチェーンを0から構築できるモードであり、自分以外のユーザーは接続することができない。採掘アルゴリズムの自動テストなど完全なローカル開発をしたい場合に有用なモードである。"
},
{
"q": "Coreのウォレットにあるビットコインを手動で取引作成して、署名して、配信したい場合に使用するRPCコールを順番に述べよ",
"a": "createrawtransaction、signrawtransaction, sendrawtransaction"
},
{
"q": "現行バージョンの初期値で「realyfee」はいくらになっているか述べよ？",
"a": "0.00001000（getinfoのコマンドを使って確認する）"
}
]