[
{
"q": "1976年に公開鍵暗号を発明したのは誰か答えよ",
"a": "デフィーとヘルマン（ウィットフィールド・デフィー＆マーティン・ヘルマン）"
},
{
"q": "原始ブロックのことを英語で何というか答えよ",
"a": "Genesis Block"
},
{
"q": "sha256のハッシュは何バイトか答えよ",
"a": "32"
},
{
"q": "sha512のハッシュは何バイトか答えよ",
"a": "64"
},
{
"q": "RIPEMD160のハッシュは何バイトか答えよ",
"a": "20"
},
{
"q": "Base58Checkのチェックサムは何バイトか答えよ",
"a": "4バイト"
},
{
"q": "Bitocoinの公開鍵に対して行うハッシュ関数の組み合わせを答えよ<br>A: sha256sha256 B: sha256ripemd160 C: ripemd160sha256 D: ripemd160ritemd160",
"a": "B"
},
{
"q": "P2SHとは何の略か？またどういう意味か簡潔に説明せよ。",
"a": "Pay to Script Hash。普通のアドレスとは違う、スクリプトのハッシュに対してビットコインを払う方式を言う。マルチシグネチャのアドレスに使用される。"
},
{
"q": "P2SHのアドレスの最初につく文字列を答えよ",
"a": "数字の3"
},
{
"q": "Bitcoinの電子署名で用いられている楕円曲線を答えよ",
"a": "secp256k1"
},
{
"q": "楕円曲線の特性について答えよ",
"a": "2点(A,B)を通る直線を引くと必ず3点目(C)を通過する。点Dを点CのX軸対象の点とすると、その際、A+B＝Dとなる。X軸に垂直な線を引いた場合は2点しか通らない。"
},
{
"q": "Base58エンコードを説明せよ",
"a": "Base64エンコードから人間が間違いやすい文字(0, l, I, O, +, /)を取り除いた文字列でエンコードするエンコード方式のこと。"
},
{
"q": "ビットコインの秘密鍵はどのような形式で表示されるか答えよ",
"a": "WIF（ウォレットインポートフォーマット）と呼ばれる、Base58Checkのエンコードで表示される。"
},
{
"q": "ECDSAとは何か説明せよ",
"a": "楕円曲線を利用したデジタル署名の方式である（楕円曲線電子署名アルゴリズム）。秘密鍵とデータから署名を作成する。"
},
{
"q": "ECDSAの署名はどのような値か？",
"a": "(r,s)の整数"
},
{
"q": "署名時にRFC6979で防ぐことができる危険性を説明せよ",
"a": "RFC6979に沿わず非決定論的に秘密鍵を生成した場合、秘密鍵が増え続けることによる管理の煩雑さを回避できる。"
},
{
"q": "リトルエンディアンとは何か？説明せよ",
"a": "数値をバイト表示した際にそのバイト列を最下位のバイトから逆順に表したもの"
},
{
"q": "-10を二進数の符号付絶対値で答えよ",
"a": "10001010"
},
{
"q": "-10をニの補数を答えよ",
"a": "11110101"
},
{
"q": "varintとは何か？説明せよ。",
"a": "1-9バイトで数値を表現する変動長整数型。ヘッダバイトの有無により数値を表現できる。ヘッダバイトなしだと～252までの数値。fdだと後ろに2バイト、feだと後ろに4バイト、ffだと後ろに8バイトのが符号なしのリトルエンディアンであらわされる。"
},
{
"q": "Bigintegerとは何か答えよ",
"a": "256ビット＝32バイトの数値を扱うための数値型"
},
{
"q": "ビットコインは何桁の小数点で表示されるか？",
"a": "8桁の小数点"
},
{
"q": "ビットコインの最小の値は？",
"a": "0.00000001 = 1サトシ"
},
{
"q": "マークルツリーとは？簡潔に説明せよ。",
"a": "データの検証を行う際に使用されるツリー構造の一種で、一部のハッシュデータしか保持していなくても、ツリー全体の正当性を検査できる。"
},
{
"q": "取引の入力に用いられるスクリプトの一般的な名称を答えよ",
"a": "scriptsig(回答)"
},
{
"q": "取引の出力に用いられるスクリプトの一般的な名称を答えよ",
"a": "scriptpubkey(パズル)"
},
{
"q": "入力の検証における入力と出力の実行順序を答えよ",
"a": "入力→出力の順で処理される"
},
{
"q": "OPコードとは？簡潔に説明せよ。",
"a": "1バイトだけでオペレーションを指定する識別方式のこと。"
},
{
"q": "数字のOPコードはいくつあるか？",
"a": "OP_0～OP_16の17個。OP_0はFalseと同値となる。"
},
{
"q": "OP_DUPはどういう意味か？",
"a": "スタックにある入力値を複製する。"
},
{
"q": "OP_ADD、OP_SUBは入力値をいくつとるか？",
"a": "2つ"
},
{
"q": "OP_SWAPはどういう意味か？",
"a": "スタックにある入力値を入れ替える"
},
{
"q": "OP_BOOLANDはどういう意味か？",
"a": "2つの入力値を受け取りそのそれぞれの値が0かどうかチェックする。"
},
{
"q": "OP_2DUP、OP_3DUPとはどういう意味か？",
"a": "それぞれ、入力値を複製する。OP_2DUPは2個複製、OP_3DUPは3個複製する。"
},
{
"q": "OP_ROTとはどういう意味か？",
"a": "入力値の上位3つのスタックの順番を3番目を1番上に持ってくるように入れ替える。(x1,x2,x3→x2,x3,x1)"
},
{
"q": "OP_2SWAPとはどういう意味か？",
"a": "入力値の順番を2つの塊で入れ替える(x1,x2,x3,x4→x3,x4,x1,x2)"
},
{
"q": "OP_HASH160はどういう意味か？",
"a": "入力の値に対し、sha256のハッシュをかけさらにripemd160のハッシュをかける。"
},
{
"q": "OP_EQUALVERIFYとはどういう意味か？",
"a": "2つの入力値を比較して同じであれば何も値を返さず、違っていればfailを返す。"
},
{
"q": "OP_CHECKMULTISIGには有名なバグがあるがそれはどういうものか？",
"a": "スタックの消費数が+1されるにバグがある。そのため、scriptSigの先頭にOP_0を必ずつける必要がある。"
},
{
"q": "OP_3DUP OP_ADD OP_8 OP_EQUAL OP_SWAP OP_ROT OP_ADD OP_10 OP_EQUAL OP_2SWAP OP_ADD OP_4 OP_EQUAL OP_BOOLAND OP_BOOLAND<br>上記のスクリプトの回答を答えよ",
"a": "OP_3 OP_1　OP_7"
},
{
"q": "取引の入力に含まれる値を正しい順序に並び替えよ<br>A.[txhashbuf] B [scriptvi] C [seqnum] D [txoutnum] E [script]",
"a": "A D B E C"
},
{
"q": "取引の出力に含まれる値を正しい順序に並び替えよ<br>A [scriptvi] B [script] C [value]",
"a": "C A B"
},
{
"q": "取引に含まれる以下の値の[nlocktime]について簡潔に答えよ<br>[version][txinsvi][txins][txoutsvi][txouts][nlocktime]",
"a": "時間もしくはブロック高が入り、取引の有効になる時点を示す。"
},
{
"q": "ブロックに含まれる取引が奇数の際、マークルルート生成に必要な事を述べよ",
"a": "一番最後のマークルハッシュを複製し、最後にくっつけてから算出する"
},
{
"q": "ブロックに含まれるブロックハッシュの目標値が下がると採掘の難易度はどうなるかを答えよ",
"a": "難易度は上がる。ブロックハッシュの目標値と採掘の難易度は反比例する。"
},
{
"q": "ブロックヘッダに含まれる値の正しい順序に並び替えよ<br>A [prevblockhash] B [time] C [merkleroot] D [nonce] E [bits] F [version]",
"a": "F A C B E D"
},
{
"q": "ブロックに含まれる値を正しい順序に並びかえよ<br>A [txsvi] B [txs] C [blocksize] D [blockheader] E [magicnum]",
"a": "E C D A B"
},
{
"q": "以下の中から典型的なScriptではない物を選びなさい<br>A. pay to pubkey hash B. pubkey C. sigkey D. OP_RETURN",
"a": "C"
},
{
"q": "redeemscriptとは何か？簡潔に説明せよ。",
"a": "マルチシグに対する回答となるスクリプト。(OP_CHECKMULTISIG)P2SHの際にハッシュかされて使用される。scriptPubkeyを短くする効果がある。"
},
{
"q": "取引がスタンダード取引でなかった場合、そのブロックはどうなるか答えよ",
"a": "ブロックが伝播されない"
},
{
"q": "取引が不正だった場合、そのブロックはどうなるか答えよ",
"a": "ブロック自体が不正なブロックとみなされる"
},
{
"q": "BIP32とは何か？簡潔に説明せよ。",
"a": "決定論的に鍵生成をすることを定義したBIP（HDウォレット）。マスターシード1つをベースに無限大の秘密鍵・公開鍵を導出する。階層的な派生パスという概念で派生する。特殊なバイトをヘッダにおいて、拡張公開鍵はxpub、拡張秘密鍵はxprvで始まるようにする。"
},
{
"q": "BIP39とは何か？簡潔に説明せよ。",
"a": "秘密鍵（厳密にはマスターシード）をニーモニックと呼ばれる人間にも分かりやすいパスフレーズに変換することを定義したBIP。通常は12～24個のフレーズが生成され、そのフレーズからマスターシードを導出できる仕組み。"
},
{
"q": "なぜBIP39が有用なのか簡潔に説明してください。",
"a": "秘密鍵のような長い複雑な文字列を人間には暗記しずらく書留ミスも起こりやすい。ニーモニックであれば暗記しやすさや書留のミスも起こりにくくなり、秘密鍵をなくす可能性も抑えられる。"
},
{
"q": "BIP44とは何か？簡潔に説明せよ。",
"a": "BIP32で定義されている階層化のロジックはアカウントの概念がないため、派生パスを標準化することより、互換性が保たれるようにする仕組み。"
},
{
"q": "BitcoinにおけるBIP44の基本的な派生パスはどのようになるか？",
"a": "m/44'/0'/0' m/BIP44/ビットコインの識別番号/アカウント"
},
{
"q": "BIP45とは何か？簡潔に説明せよ。",
"a": "P2SH（マルチシグ）の場合のアドレスの生成方法に関する定義。BIP44でマルチシグを実現しようと思うと他人の公開鍵を知る必要がある。派生パスの生成方法を標準化する。現在実装例はほとんどない。"
},
{
"q": "BIP70-73とは何か？簡潔に説明せよ。",
"a": "ビットコインに支払に関するユーザービリティーをあげるためのBIPs。BIP70はペイメントに関する方法を定義している。直接信頼のおける店舗のAPI経由で支払いが行われるような仕組み。BIP71はBIP70用のHTTP通信のMYME TYPEの定義。BIP72はBIP70に対応したBitcoin URIの拡張を定義している。rの属性にペイメントリクエストURLを含む。BIP73はウォレットソフトがペイメントリクエストURLをリクエストする際にAcceptヘッダをつけることを定義している。"
},
{
"q": "ペイメントリクエストURLのメリットは？",
"a": "HTTPSを利用するためリクエスト自体が署名され中間者攻撃から守られる。お店自体に支払を認識されるため安心である。"
},
{
"q": "BIP65とは何か？簡潔に説明せよ。",
"a": "取引に含まれるnLocktimeに対して、CHECKLOCKTIMEVERIFYの引数を比較することでブロックチェーンの中に一定の時間まで資金をロックすることができる。"
},
{
"q": "ビットコインのノードに接続する場合、P2P最初に送りあう最初のコマンドは何か？",
"a": "versionコマンドを送りあった後、verackコマンドを送りあうことで通信が確立する。(S:version,R:version,S:verack,R:verack)"
},
{
"q": "8個の取引のあるブロックのmerkleblockメッセージに含まれたフラグバイトは0x7775です。左から1-8の番号を振った場合、どの取引がマッチするか？",
"a": "2,3,5,8"
},
{
"q": "あるメッセージは何の前触れもなくノード側から送られてくることがあるがそのメッセージは何か？2つ答えよ。",
"a": "txメッセージとblockメッセージ"
},
{
"q": "invを用いずにデータを取得できる唯一のメッセージを答えよ",
"a": "getheaders"
},
{
"q": "invのメッセージに含まれている基本的な情報とは？",
"a": "ブロックのハッシュ値が含まれている。"
},
{
"q": "alertメッセージはどのようなときに送られるか？",
"a": "緊急時に警告メッセージを送るために使われる。ソースにハードコーディングされた公開鍵に紐づいた秘密鍵で署名しないといけない。"
},
{
"q": "testnetとregtestの2つのモードの違いを述べよ",
"a": "testnetはビットコインの開発を行うためのネットワーク。流通する通貨に価値はなく、ビットコインと同様にインターネットにつながっていればtestnetのネットワークに接続できる。regtestはローカルにおいて独自のブロックチェーンを0から構築できるモードであり、自分以外のユーザーは接続することができない。採掘アルゴリズムの自動テストなど完全なローカル開発をしたい場合に有用なモードである。"
},
{
"q": "Coreのウォレットにあるビットコインを手動で取引作成して、署名して、配信したい場合に使用するRPCコールを順番に述べよ",
"a": "createrawtransaction、signrawtransaction, sendrawtransaction"
},
{
"q": "現行バージョンの初期値で「realyfee」はいくらになっているか述べよ？",
"a": "0.00001000（getinfoのコマンドを使って確認する）"
}
]