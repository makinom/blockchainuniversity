■ブロックチェーン大学校 第4回
スクリプト：ビットコインのプログラミング言語

ハノイの塔
　一番下の板をどうにかするには上にある板をどうにかしないといけない。

Pub
Sig

先にシグネチャを処理して上にパブリックキーを置くみたいなイメージ

ビットコインの処理では0以外のデータであればtrueとする

OPコードは1バイトなので、256コマンドしか存在しない

https://en.bitcoin.it/wiki/Script
↑で背景が赤い奴は使えない。使わないようにする。

OP_CODESEPARATOR
実質使われていないが、独自のものを作る場合は動作をよく確認したほうがよい。

OP_HASH256 sha2562回

OP_CHECKMULTISIGの中にバグがあるのでマルチシグのとこの先頭にOP_0が必須

Pay to Script Hash(P2SH)・・・？

ScriptPubkeyの中にむき出しの公開鍵を隠す（量子コンピュータとかで楕円曲線が割れ、公開鍵から秘密鍵を導出できるとしても隠しておけば、解析までの時間を稼げる）

スタンダード取引から外れる場合はブロックを伝播させない

testnet 開発用のネットワーク
→スタンダードのルールをデフォルトでしていないので、チェックするほうが良い。

equal
16
add
14
sub
8 - X = 14 add 16 = 



3
OP_5
OP_ADD
OP_8
OP_EQUAL


X
OP_HASH256
6fe28c0ab6f1b372c1a6a246ae63f74f931e8365e15a089c68d6190000000000
OP_EQUAL



OP_IF
OP_TRUE
OP_ELSE
OP_RETURN
OP_ENDIF





トイレ休憩がほしい





022d4549c2f5aca5697dc232390770a99d6ee6ee139fda0fa0412e77a7bcd4b3ee
OP_CHECKSIGVERIFY
OP_3DUP 
OP_ADD
OP_12 
OP_EQUAL
OP_SWAP
OP_ROT
OP_ADD
OP_9
OP_EQUAL
OP_2SWAP
OP_ADD
OP_7
OP_EQUAL
OP_BOOLAND
OP_BOOLAND


y + z = 12
x

testnet bitcoin faucet


022d4549c2f5aca5697dc232390770a99d6ee6ee139fda0fa0412e77a7bcd4b3ee
OP_CHECKSIGVERIFY
OP_HASH256
6fe28c0ab6f1b372c1a6a246ae63f74f931e8365e15a089c68d6190000000000
OP_EQUAL



https://en.bitcoin.it/wiki/Script
https://bip32jp.github.io/english/createp2sh.html
https://webbtc.com/script/
https://test-insight.bitpay.com/address/2MyDa63t2Jc7s6hnMTMdzQANmToqCFxT1gw
http://www.crmarsh.com/script-playground/