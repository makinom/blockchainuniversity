13.3インチ
1.7 Corei7
8GB DDR3
フラッシュストレージ256


■ブロックチェーン大学校 第6回
ビットコインのP2Pプロトコル

・前回の課題の復習
m/44'/0'/2'/0/24

BIP44
　アドレスを作成するところの層が1つしかない。2人以上が同じアドレスを使うような可能性がある→そのためのBIP45

BIP70
　HTTPSと同じような攻撃が考えられる。通る匿名ネットワークのところでエグジッドノードの人が本人のアドレスに切り替える。というような中間者攻撃が起こりえる。なのでHTTPSは必須。必須。
　ウイルスおよびマルウェアが端末に表示されているビットコイなどレスを書き換えられる。表示されるまではHTTPSだが、表示後に書き換えられる可能性がある。

・概要
　ビットコインのP2Pはメッセージでやり取りされる。シンプルなのが特徴。Ethとかは複雑みたい。
　
・ノードの種類
　full node 原始ブロックから最新のブロックまでUTXOのデータベースをすべて保存する（いまは80GBくらい？
　pruning node 直近の1000ブロックくらいをUTXOのデータベースで保存する。pruning nodeの設定で何GBを保持するか？とか決められる
　SPV node(simplified payment verification) 基本的にすべてのブロックヘッダー（30MB）持っている。ブロックを受信することは基本的にない。マークルツリーの部分的なハッシュをfull nodeとかpruning nodeからもらう。UTXOのデータベースは保存しない。

・メッセージ
　invは12バイトじゃないので、0バイトをつなげて12バイトになるようにする。

・在庫
　何をするにも2往復しないといけないやりかたになっている
　invのメッセージにはタイプとハッシュしか入っていない。

・Block
　何の前触れもなく送られることがある。

・GetBlocks
　stophash　→　32バイトの0ハッシュ？

・Merkleblock
　merklblock = マークルルート

　初めて見る0が1個目のハッシュ。親に行って一つ隣の子孫からすすむ。子供がいなければマッチしない。
　子孫の探索が終わってしまったら親のほうにさかのぼる

　hashesのデータはflagbytesでマッチするものだけが送られてくる

・Alert
　現在接続しているほかのノードにすぐにメッセージを送らないといけない

・Filter Load
　ブルームフィルターと呼ばれるマスク方式のフィルター
　つながっているフルノードに対して、フィルタにマッチした取引だけ送ってくださいということができる。
　nfilterbytes = varint

　ブルームフィルターは壁抜け？の感じに似ている

　nhashfuncs と ntweak の値を付けることでプライバシーを上げる。
　→ピッタリにしてしまうとプライバシーが薄れる可能性がある。
　→関係ないものもマッチさせる。

　ブルームフィルターをフルノードに送る　すべてのインプットとアウトプットの中にあるハッシュをブルームフィルターにかけて送るかどうか決める。

　SPVノードの接続を拒否するfullノードが出ている。fullnode側に負荷がある。
　BreadWalletは自社で立ち上げたfullnodeにアクセスするようにしてレスポンスをあげていたらしい。

・Filter Clear
　2000アドレスくらいになったら、FilterClearして直近の500アドレスだけAddFilterするというような使い方をする
・Version
　接続確立をするためのメッセージ。これを最初に送らないとブロックされたりする。

・VerAck
　versionメッセージを受け取りました！というメッセージ。接続確立時に必ず行わないといけない


・課題

{S:ping,R:pong}　＝　S:ping,R:pongの2回以上のやりとり

①
S:version,R:version,S:verack,R:verack,{S:getblocks,R:inv,S:getdata,R:block}

②
S:version,R:version,S:verack,R:verack,S:filterload,{S:mempool,R:inv,S:getdata,R:merkleblock}

③
DEA0 →　56992　→　1101111010100000
3,4,7,8

■version、verackのやり取り
http://bitcoin.peryaudo.org/implement.html
→「ハンドシェイクの手順は以下の通りである・・・」

https://bitcoin.org/en/developer-reference#version
→「Until both peers have exchanged version messages」

■SPVはmempool使ってる・・・？
https://bitcoin.org/en/developer-reference#mempool
→「SPV clients can set a filter before sending a mempool to only receive transactions that match that filter」
ブルームフィルターを設定したあとにmempoolを送ることでマッチしたトランザクションだけ受けられる？

■マッチした取引？
https://bitcoin.org/en/developer-reference#parsing-a-merkleblock-message



提出したやつ

①
S:version,R:verack,R:version,S:verack,{S:getblocks,R:inv,{S:getdata,{R:block}}}

②
S:version,R:verack,R:version,S:verack,S:filterload,{S:getblocks,R:inv,S:getdata,{R:tx}}

③
3,4,7,8