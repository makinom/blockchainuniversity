■ブロックチェーン大学校 第7回
ビットコイン・コア　元祖クライアント

○→○→B（orphan）

○→○→A→C

orphanのデータは一応保持されている。
getblocksはorphanのデータもinvの中に入ってくる。
{S:getheaders,R:headers}を挟んで高速化する方法がある

最後のやつは　3,4,8

----

BitCoin Core
　ビットコインのプロトコルの最初の実装例
  bitcoin core と bitcore は別プロジェクト。（混乱しないように！）

Testnet/Mainnet
　Testnet
　　オルトコインのようでオルトコインではない？。ビットコインを開発するためのオルトコイン。
　　--testnetという引数をつけると別管理される？
　Regtest
　　自動テストに役立つ独自チェーン。ネットワークではない。
　　ローカルで独自のブロックチェーンを0から作り上げるというモード。
　　　採掘アルゴリズムの自動テスト、採掘周りの実装を試したい。採掘するのが自分一人だけになるので開発環境としてよい。
　　対応しているプロジェクトが少ないかも。

GUI
　個人的にウォレットとして使いたいときは使うけど・・・。法人は無効にして使ってるぽい。

RPC
　Remote プロシージャー　コール

　Coincheckはrubyで書かれている。
　ローカルのBitCoin CoreにRPCコールする？

　chainquery.comがもつfullnodeにRPCコールできる。

　getchaintips　→　orphanに関連するブロックを返す。負け犬のハッシュ。笑

　gettxoutsetinfo
　　total_amount　現在のビットコインの送料

　verifychain
　　人からもらったBlockChainのディレクトリの中身が正しいかとか検証もできる。

　よく使われる3つ
　　getinfo
　　help
　　stop

　getblocktemplate
　　今はマイニングプールとかがあるのであまり使われなくなった。

　P2P系のは結構使う
　　手動でノードにピアを追加したりできる。

　取引系
　　createrawtransaction
　　　未署名の取引をすぐに作成できる

　　estimatefee nblocks
　　　nblocksの値が大きくなったり、平均値が取れないと -1 の値が返ってくる。(1とか100とか）

　signmessage ＆ validatemessage
　　署名を使うことでビットコインアドレスの信頼が取れる。

　account
　　duplicateになっているがまだ削除されていない。
　　使えるっちゃ使えるけど、非推奨らしい。

　dumpprivkey


来週の資料はもう古くなってて間違っている内容が多い。
最新情報を交えて説明する予定。


■来週のテストの予習

○楕円曲線
　楕円曲線がどういう性質をもっているか？
　2つの点を通過する直線を書くと3つ目の
　接線を
　足し算のような楕円曲線の数学
　割り算はできない。が、引き算はできる。
　
　楕円曲線において唯一3つ目の点を通過しない線は縦の直線。反射している点がその点のマイナスの値になる。 Aと-Aを楕円曲線的に足し合わせると3つ目の点がない0となるともいえる。

　ビットコインで使われる楕円曲線の定数がsecp256k1

○ハッシュ関数
　ハッシュのバイト数とか

　採掘に使われてるアルゴリズムはsha256　2回かける

○Base58Check
　チェックサムの長さは？4バイトです。とか。

○アドレスに関する話も出る
　3で始まるアドレスはなんですか？p2shです。とか。
　公開鍵の圧縮版がどういう仕組みをしているのか？yの値をなくしてやってる的な。2と3がどういう意味を持っているのか？yの値が具薄なのか奇数なのか。


○ECDSA署名
　署名が成り立っている2つの値 r と s それぞれの意味。
　　r: 
　　s: 

　RFC6979がどういう意味なのか。なぜそれがいいことなのか？
　　メッセージと秘密鍵のデータ自体もハッシュアルゴリズムの中に入れられるため。
　　メッセージ or 秘密鍵が変われば k の値が変わる

○取引とブロック
　入力の役割
　　ビットコインを入れて過去のコインから参照して
　出力の役割
　　誰に送るのか

　ScriptSig　と　ScriptPubkey　伝統的に出力は公開鍵が入る。入力は

　数値の書式
　　エンディアン・2の補数とかに関しては、2の補数はどれか？的なのがでてくるかも。
　　＃３のスライド9がりかいできてればいいかも。

　varint
　　細かい話は出ないけど、どういう数値がはいるのかとかわかるといい

　Big　Intger　名前くらいわかってればいい

　ビットコインの桁数
　　小数は固定で8ケタ。
　
　サトシは符号なしのuint64で指定しているとか

　取引の入力と出力
　　複数選択式とかこの中のどれが入力の中に含まれるものなのか？txoutnum txoutbufを見る感じ？

　マークル木
　　基本的な構造について知識があればいいのでは？
　　どこかの層で奇数になった場合、一番右のデータを複製してくっつけてハッシュするとか
　　難易度と目標値が反対語であること

　ブロックヘッダに含まれているのはどれ？とか。

○スクリプト言語
　スクリプトの実行順番
　　入力を実行してから出力を実行する
　　基本的なスタックの動作
　　OP_CHECKSIG
　　　必ず2つのアイテムを消費して公会議からの電子署名という風に
　　OP_CHECKMULTISIGの動作
　　　公開鍵の数を指定する数字を読み込んでその数だけアイテム+1を消費する。それはバグである。
　　典型的なスクリプトのひな型。どれが典型的なひな型じゃないか？
　　redeemScriptがなにか？
　　　本当のScriptPubkey。意味合いを果たしている。ということはわかっといたほうがいい。
　　OP_RETURN　任意のデータが入れられる
　　スタンダード取引でないとどうなるか？不正な取引だとどうなるのか？違い。
　　スタンダードは伝搬されない。MAXブロックとかを超えてると不正になるとか。

　　OP_ADD OP_7とか出るかも。

○重要なBIP
　だいたいどのBIP○○がどれになっているのかはわかっておいたほうが良い。

　CHECKLOCKTIMEVERIFY　存在くらいは知っておいたほうがいい。

　BIP44の派生のパスでそれぞれの意味を理解しておく。

○P2Pプロトコル
　version, verack のやり取りなどの基本形
　merkleblockのビットフィールドで取引のマークルツリーを出す問題。
　getheadersはinvを通さない唯一の方法
　txのメッセージとblockのメッセージは何の前触れもなく送られることがあるという点。
　Invのメッセージには基本的にハッシュしか含まれないという事実。
　alertのメッセージがどういう意味をしているのか？
　　ソースの中にハードコーディングされたある秘密鍵に署名されたデータしか使わない
○ビットコイン・コア
　第7回の課題に出ているようなこととかが出る。